                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _clear_screen
                             13 	.globl _title_screen
                             14 	.globl _update_sprite_animation
                             15 	.globl _unflip_sprite_horiz
                             16 	.globl _flip_sprite_horiz
                             17 	.globl _setchar
                             18 	.globl _gotoxy
                             19 	.globl _move_sprite
                             20 	.globl _get_sprite_prop
                             21 	.globl _set_sprite_prop
                             22 	.globl _set_sprite_tile
                             23 	.globl _set_sprite_data
                             24 	.globl _scroll_bkg
                             25 	.globl _move_bkg
                             26 	.globl _set_bkg_tiles
                             27 	.globl _set_bkg_data
                             28 	.globl _wait_vbl_done
                             29 	.globl _waitpadup
                             30 	.globl _waitpad
                             31 	.globl _joypad
                             32 	.globl _printf
                             33 	.globl _is_player_walking
                             34 	.globl _player_animation_frame
                             35 	.globl _player_direction
                             36 	.globl _player_virtual_y
                             37 	.globl _player_virtual_x
                             38 	.globl _player_y
                             39 	.globl _player_x
                             40 	.globl _PLAYER_SPRITE_ANIM_R
                             41 	.globl _PLAYER_SPRITE_ANIM_L
                             42 ;--------------------------------------------------------
                             43 ; special function registers
                             44 ;--------------------------------------------------------
                             45 ;--------------------------------------------------------
                             46 ; ram data
                             47 ;--------------------------------------------------------
                             48 	.area _DATA
   0000                      49 _PLAYER_SPRITE_ANIM_L::
   0000                      50 	.ds 24
   0018                      51 _PLAYER_SPRITE_ANIM_R::
   0018                      52 	.ds 24
   0030                      53 _player_x::
   0030                      54 	.ds 1
   0031                      55 _player_y::
   0031                      56 	.ds 1
   0032                      57 _player_virtual_x::
   0032                      58 	.ds 2
   0034                      59 _player_virtual_y::
   0034                      60 	.ds 2
   0036                      61 _player_direction::
   0036                      62 	.ds 1
   0037                      63 _player_animation_frame::
   0037                      64 	.ds 1
   0038                      65 _is_player_walking::
   0038                      66 	.ds 1
                             67 ;--------------------------------------------------------
                             68 ; absolute external ram data
                             69 ;--------------------------------------------------------
                             70 	.area _DABS (ABS)
                             71 ;--------------------------------------------------------
                             72 ; global & static initialisations
                             73 ;--------------------------------------------------------
                             74 	.area _HOME
                             75 	.area _GSINIT
                             76 	.area _GSFINAL
                             77 	.area _GSINIT
                             78 ;main.c:13: UINT8 PLAYER_SPRITE_ANIM_L[] = {
   0000 21r00r00             79 	ld	hl, #_PLAYER_SPRITE_ANIM_L
   0003 36 04                80 	ld	(hl), #0x04
   0005 21r01r00             81 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0001)
   0008 36 00                82 	ld	(hl), #0x00
   000A 21r02r00             83 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0002)
   000D 36 00                84 	ld	(hl), #0x00
   000F 21r03r00             85 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0003)
   0012 36 04                86 	ld	(hl), #0x04
   0014 21r04r00             87 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0004)
   0017 36 00                88 	ld	(hl), #0x00
   0019 21r05r00             89 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0005)
   001C 36 08                90 	ld	(hl), #0x08
   001E 21r06r00             91 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0006)
   0021 36 04                92 	ld	(hl), #0x04
   0023 21r07r00             93 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0007)
   0026 36 00                94 	ld	(hl), #0x00
   0028 21r08r00             95 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0008)
   002B 36 0C                96 	ld	(hl), #0x0c
   002D 21r09r00             97 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0009)
   0030 36 10                98 	ld	(hl), #0x10
   0032 21r0Ar00             99 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x000a)
   0035 36 0C               100 	ld	(hl), #0x0c
   0037 21r0Br00            101 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x000b)
   003A 36 14               102 	ld	(hl), #0x14
   003C 21r0Cr00            103 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x000c)
   003F 36 04               104 	ld	(hl), #0x04
   0041 21r0Dr00            105 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x000d)
   0044 36 00               106 	ld	(hl), #0x00
   0046 21r0Er00            107 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x000e)
   0049 36 18               108 	ld	(hl), #0x18
   004B 21r0Fr00            109 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x000f)
   004E 36 1C               110 	ld	(hl), #0x1c
   0050 21r10r00            111 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0010)
   0053 36 18               112 	ld	(hl), #0x18
   0055 21r11r00            113 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0011)
   0058 36 20               114 	ld	(hl), #0x20
   005A 21r12r00            115 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0012)
   005D 36 04               116 	ld	(hl), #0x04
   005F 21r13r00            117 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0013)
   0062 36 01               118 	ld	(hl), #0x01
   0064 21r14r00            119 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0014)
   0067 36 1A               120 	ld	(hl), #0x1a
   0069 21r15r00            121 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0015)
   006C 36 1E               122 	ld	(hl), #0x1e
   006E 21r16r00            123 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0016)
   0071 36 1A               124 	ld	(hl), #0x1a
   0073 21r17r00            125 	ld	hl, #(_PLAYER_SPRITE_ANIM_L + 0x0017)
   0076 36 22               126 	ld	(hl), #0x22
                            127 ;main.c:20: UINT8 PLAYER_SPRITE_ANIM_R[] = {
   0078 21r18r00            128 	ld	hl, #_PLAYER_SPRITE_ANIM_R
   007B 36 04               129 	ld	(hl), #0x04
   007D 21r19r00            130 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0001)
   0080 36 00               131 	ld	(hl), #0x00
   0082 21r1Ar00            132 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0002)
   0085 36 02               133 	ld	(hl), #0x02
   0087 21r1Br00            134 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0003)
   008A 36 06               135 	ld	(hl), #0x06
   008C 21r1Cr00            136 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0004)
   008F 36 02               137 	ld	(hl), #0x02
   0091 21r1Dr00            138 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0005)
   0094 36 0A               139 	ld	(hl), #0x0a
   0096 21r1Er00            140 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0006)
   0099 36 04               141 	ld	(hl), #0x04
   009B 21r1Fr00            142 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0007)
   009E 36 00               143 	ld	(hl), #0x00
   00A0 21r20r00            144 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0008)
   00A3 36 0E               145 	ld	(hl), #0x0e
   00A5 21r21r00            146 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0009)
   00A8 36 12               147 	ld	(hl), #0x12
   00AA 21r22r00            148 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x000a)
   00AD 36 0E               149 	ld	(hl), #0x0e
   00AF 21r23r00            150 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x000b)
   00B2 36 16               151 	ld	(hl), #0x16
   00B4 21r24r00            152 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x000c)
   00B7 36 04               153 	ld	(hl), #0x04
   00B9 21r25r00            154 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x000d)
   00BC 36 00               155 	ld	(hl), #0x00
   00BE 21r26r00            156 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x000e)
   00C1 36 1A               157 	ld	(hl), #0x1a
   00C3 21r27r00            158 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x000f)
   00C6 36 1E               159 	ld	(hl), #0x1e
   00C8 21r28r00            160 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0010)
   00CB 36 1A               161 	ld	(hl), #0x1a
   00CD 21r29r00            162 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0011)
   00D0 36 22               163 	ld	(hl), #0x22
   00D2 21r2Ar00            164 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0012)
   00D5 36 04               165 	ld	(hl), #0x04
   00D7 21r2Br00            166 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0013)
   00DA 36 01               167 	ld	(hl), #0x01
   00DC 21r2Cr00            168 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0014)
   00DF 36 18               169 	ld	(hl), #0x18
   00E1 21r2Dr00            170 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0015)
   00E4 36 1C               171 	ld	(hl), #0x1c
   00E6 21r2Er00            172 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0016)
   00E9 36 18               173 	ld	(hl), #0x18
   00EB 21r2Fr00            174 	ld	hl, #(_PLAYER_SPRITE_ANIM_R + 0x0017)
   00EE 36 20               175 	ld	(hl), #0x20
                            176 ;--------------------------------------------------------
                            177 ; Home
                            178 ;--------------------------------------------------------
                            179 	.area _HOME
                            180 	.area _HOME
                            181 ;--------------------------------------------------------
                            182 ; code
                            183 ;--------------------------------------------------------
                            184 	.area _CODE
                            185 ;main.c:48: void flip_sprite_horiz(UINT8 sprite_id)
                            186 ;	---------------------------------
                            187 ; Function flip_sprite_horiz
                            188 ; ---------------------------------
   0000                     189 _flip_sprite_horiz::
                            190 ;main.c:50: set_sprite_prop(sprite_id, get_sprite_prop(sprite_id) | S_FLIPX);
   0000 F8 02               191 	ldhl	sp,	#2
   0002 7E                  192 	ld	a, (hl)
   0003 F5                  193 	push	af
   0004 33                  194 	inc	sp
   0005 CDr00r00            195 	call	_get_sprite_prop
   0008 33                  196 	inc	sp
   0009 7B                  197 	ld	a, e
   000A CB EF               198 	set	5, a
   000C F5                  199 	push	af
   000D 33                  200 	inc	sp
   000E F8 03               201 	ldhl	sp,	#3
   0010 7E                  202 	ld	a, (hl)
   0011 F5                  203 	push	af
   0012 33                  204 	inc	sp
   0013 CDr00r00            205 	call	_set_sprite_prop
   0016 E8 02               206 	add	sp, #2
                            207 ;main.c:51: }
   0018 C9                  208 	ret
                            209 ;main.c:56: void unflip_sprite_horiz(UINT8 sprite_id)
                            210 ;	---------------------------------
                            211 ; Function unflip_sprite_horiz
                            212 ; ---------------------------------
   0019                     213 _unflip_sprite_horiz::
                            214 ;main.c:58: set_sprite_prop(sprite_id, get_sprite_prop(sprite_id) & ~S_FLIPX);
   0019 F8 02               215 	ldhl	sp,	#2
   001B 7E                  216 	ld	a, (hl)
   001C F5                  217 	push	af
   001D 33                  218 	inc	sp
   001E CDr00r00            219 	call	_get_sprite_prop
   0021 33                  220 	inc	sp
   0022 7B                  221 	ld	a, e
   0023 CB AF               222 	res	5, a
   0025 F5                  223 	push	af
   0026 33                  224 	inc	sp
   0027 F8 03               225 	ldhl	sp,	#3
   0029 7E                  226 	ld	a, (hl)
   002A F5                  227 	push	af
   002B 33                  228 	inc	sp
   002C CDr00r00            229 	call	_set_sprite_prop
   002F E8 02               230 	add	sp, #2
                            231 ;main.c:59: }
   0031 C9                  232 	ret
                            233 ;main.c:69: UINT8 update_sprite_animation(UINT8 sprite_id, UINT8 *anim, UINT8 direction, UINT8 frame)
                            234 ;	---------------------------------
                            235 ; Function update_sprite_animation
                            236 ; ---------------------------------
   0032                     237 _update_sprite_animation::
   0032 E8 FC               238 	add	sp, #-4
                            239 ;main.c:71: UINT8 len = anim[direction];
   0034 F8 07               240 	ldhl	sp,#(8 - 1)
   0036 5E                  241 	ld	e, (hl)
   0037 23                  242 	inc	hl
   0038 56                  243 	ld	d, (hl)
   0039 23                  244 	inc	hl
   003A 6E                  245 	ld	l, (hl)
   003B 26 00               246 	ld	h, #0x00
   003D 19                  247 	add	hl, de
   003E 4D                  248 	ld	c, l
   003F 44                  249 	ld	b, h
   0040 0A                  250 	ld	a, (bc)
   0041 F8 00               251 	ldhl	sp,	#0
   0043 77                  252 	ld	(hl), a
                            253 ;main.c:72: UINT8 flip = anim[direction + 1];
   0044 F8 09               254 	ldhl	sp,	#9
   0046 7E                  255 	ld	a, (hl)
   0047 F8 02               256 	ldhl	sp,	#2
   0049 77                  257 	ld	(hl), a
   004A AF                  258 	xor	a, a
   004B 23                  259 	inc	hl
   004C 32                  260 	ld	(hl-), a
   004D 4E                  261 	ld	c, (hl)
   004E 23                  262 	inc	hl
   004F 46                  263 	ld	b, (hl)
   0050 03                  264 	inc	bc
   0051 F8 07               265 	ldhl	sp,	#7
   0053 2A                  266 	ld	a, (hl+)
   0054 66                  267 	ld	h, (hl)
   0055 6F                  268 	ld	l, a
   0056 09                  269 	add	hl, bc
   0057 4D                  270 	ld	c, l
   0058 44                  271 	ld	b, h
   0059 0A                  272 	ld	a, (bc)
   005A F8 01               273 	ldhl	sp,	#1
                            274 ;main.c:73: UINT8 tile_id = anim[direction + 2 + frame];
   005C 22                  275 	ld	(hl+), a
   005D 4E                  276 	ld	c, (hl)
   005E 23                  277 	inc	hl
   005F 46                  278 	ld	b, (hl)
   0060 03                  279 	inc	bc
   0061 03                  280 	inc	bc
   0062 F8 0A               281 	ldhl	sp,	#10
   0064 7E                  282 	ld	a, (hl)
   0065 F8 02               283 	ldhl	sp,	#2
   0067 77                  284 	ld	(hl), a
   0068 AF                  285 	xor	a, a
   0069 23                  286 	inc	hl
   006A 32                  287 	ld	(hl-), a
   006B 2A                  288 	ld	a, (hl+)
   006C 66                  289 	ld	h, (hl)
   006D 6F                  290 	ld	l, a
   006E 09                  291 	add	hl, bc
   006F 4D                  292 	ld	c, l
   0070 44                  293 	ld	b, h
   0071 F8 07               294 	ldhl	sp,	#7
   0073 2A                  295 	ld	a, (hl+)
   0074 66                  296 	ld	h, (hl)
   0075 6F                  297 	ld	l, a
   0076 09                  298 	add	hl, bc
   0077 4D                  299 	ld	c,l
   0078 7C                  300 	ld	a,h
   0079 46                  301 	ld	b, (hl)
                            302 ;main.c:75: if (flip)
   007A F8 01               303 	ldhl	sp,	#1
   007C 7E                  304 	ld	a, (hl)
   007D B7                  305 	or	a, a
   007E 28 0D               306 	jr	Z,00102$
                            307 ;main.c:77: flip_sprite_horiz(sprite_id);
   0080 C5                  308 	push	bc
   0081 F8 08               309 	ldhl	sp,	#8
   0083 7E                  310 	ld	a, (hl)
   0084 F5                  311 	push	af
   0085 33                  312 	inc	sp
   0086 CDr00r00            313 	call	_flip_sprite_horiz
   0089 33                  314 	inc	sp
   008A C1                  315 	pop	bc
   008B 18 0B               316 	jr	00103$
   008D                     317 00102$:
                            318 ;main.c:81: unflip_sprite_horiz(sprite_id);
   008D C5                  319 	push	bc
   008E F8 08               320 	ldhl	sp,	#8
   0090 7E                  321 	ld	a, (hl)
   0091 F5                  322 	push	af
   0092 33                  323 	inc	sp
   0093 CDr19r00            324 	call	_unflip_sprite_horiz
   0096 33                  325 	inc	sp
   0097 C1                  326 	pop	bc
   0098                     327 00103$:
                            328 ;main.c:84: set_sprite_tile(sprite_id, tile_id);
   0098 C5                  329 	push	bc
   0099 33                  330 	inc	sp
   009A F8 07               331 	ldhl	sp,	#7
   009C 7E                  332 	ld	a, (hl)
   009D F5                  333 	push	af
   009E 33                  334 	inc	sp
   009F CDr00r00            335 	call	_set_sprite_tile
   00A2 E8 02               336 	add	sp, #2
                            337 ;main.c:86: return (frame + 1) % len;
   00A4 F8 02               338 	ldhl	sp,#(3 - 1)
   00A6 4E                  339 	ld	c, (hl)
   00A7 23                  340 	inc	hl
   00A8 46                  341 	ld	b, (hl)
   00A9 03                  342 	inc	bc
   00AA F8 00               343 	ldhl	sp,	#0
   00AC 5E                  344 	ld	e, (hl)
   00AD 16 00               345 	ld	d, #0x00
   00AF D5                  346 	push	de
   00B0 C5                  347 	push	bc
   00B1 CDr00r00            348 	call	__modsint
   00B4 E8 04               349 	add	sp, #4
                            350 ;main.c:87: }
   00B6 E8 04               351 	add	sp, #4
   00B8 C9                  352 	ret
                            353 ;main.c:89: void title_screen(void)
                            354 ;	---------------------------------
                            355 ; Function title_screen
                            356 ; ---------------------------------
   00B9                     357 _title_screen::
                            358 ;main.c:92: clear_screen();
   00B9 CDr0Fr01            359 	call	_clear_screen
                            360 ;main.c:94: gotoxy(5, 5);
   00BC 3E 05               361 	ld	a, #0x05
   00BE F5                  362 	push	af
   00BF 33                  363 	inc	sp
   00C0 3E 05               364 	ld	a, #0x05
   00C2 F5                  365 	push	af
   00C3 33                  366 	inc	sp
   00C4 CDr00r00            367 	call	_gotoxy
   00C7 E8 02               368 	add	sp, #2
                            369 ;main.c:95: printf("GehBoiHaven");
   00C9 21rF3r00            370 	ld	hl, #___str_0
   00CC E5                  371 	push	hl
   00CD CDr00r00            372 	call	_printf
   00D0 E8 02               373 	add	sp, #2
                            374 ;main.c:96: gotoxy(3, 15);
   00D2 3E 0F               375 	ld	a, #0x0f
   00D4 F5                  376 	push	af
   00D5 33                  377 	inc	sp
   00D6 3E 03               378 	ld	a, #0x03
   00D8 F5                  379 	push	af
   00D9 33                  380 	inc	sp
   00DA CDr00r00            381 	call	_gotoxy
   00DD E8 02               382 	add	sp, #2
                            383 ;main.c:97: printf("- Press START -");
   00DF 21rFFr00            384 	ld	hl, #___str_1
   00E2 E5                  385 	push	hl
   00E3 CDr00r00            386 	call	_printf
   00E6 E8 02               387 	add	sp, #2
                            388 ;main.c:99: waitpad(J_START);
   00E8 3E 80               389 	ld	a, #0x80
   00EA F5                  390 	push	af
   00EB 33                  391 	inc	sp
   00EC CDr00r00            392 	call	_waitpad
   00EF 33                  393 	inc	sp
                            394 ;main.c:100: waitpadup();
                            395 ;main.c:101: }
   00F0 C3r00r00            396 	jp	_waitpadup
   00F3                     397 ___str_0:
   00F3 47 65 68 42 6F 69   398 	.ascii "GehBoiHaven"
        48 61 76 65 6E
   00FE 00                  399 	.db 0x00
   00FF                     400 ___str_1:
   00FF 2D 20 50 72 65 73   401 	.ascii "- Press START -"
        73 20 53 54 41 52
        54 20 2D
   010E 00                  402 	.db 0x00
                            403 ;main.c:103: void clear_screen(void)
                            404 ;	---------------------------------
                            405 ; Function clear_screen
                            406 ; ---------------------------------
   010F                     407 _clear_screen::
                            408 ;main.c:106: UINT8 y = 18;
   010F 0E 12               409 	ld	c, #0x12
                            410 ;main.c:107: while (y)
   0111                     411 00104$:
   0111 79                  412 	ld	a, c
   0112 B7                  413 	or	a, a
   0113 C8                  414 	ret	Z
                            415 ;main.c:109: y -= 1;
   0114 0D                  416 	dec	c
                            417 ;main.c:110: x = 20;
   0115 06 14               418 	ld	b, #0x14
                            419 ;main.c:111: while (x)
   0117                     420 00101$:
   0117 78                  421 	ld	a, b
   0118 B7                  422 	or	a, a
   0119 28 F6               423 	jr	Z,00104$
                            424 ;main.c:113: x -= 1;
   011B 05                  425 	dec	b
                            426 ;main.c:114: gotoxy(x, y);
   011C C5                  427 	push	bc
   011D 79                  428 	ld	a, c
   011E F5                  429 	push	af
   011F 33                  430 	inc	sp
   0120 C5                  431 	push	bc
   0121 33                  432 	inc	sp
   0122 CDr00r00            433 	call	_gotoxy
   0125 E8 02               434 	add	sp, #2
   0127 C1                  435 	pop	bc
                            436 ;main.c:115: setchar(' ');
   0128 C5                  437 	push	bc
   0129 3E 20               438 	ld	a, #0x20
   012B F5                  439 	push	af
   012C 33                  440 	inc	sp
   012D CDr00r00            441 	call	_setchar
   0130 33                  442 	inc	sp
   0131 C1                  443 	pop	bc
   0132 18 E3               444 	jr	00101$
                            445 ;main.c:118: }
   0134 C9                  446 	ret
                            447 ;main.c:120: void main(void)
                            448 ;	---------------------------------
                            449 ; Function main
                            450 ; ---------------------------------
   0135                     451 _main::
   0135 3B                  452 	dec	sp
                            453 ;main.c:122: title_screen();
   0136 CDrB9r00            454 	call	_title_screen
                            455 ;main.c:123: clear_screen();
   0139 CDr0Fr01            456 	call	_clear_screen
                            457 ;main.c:126: set_bkg_data(0, TILESET_TILE_COUNT, TILESET);
   013C 21r00r00            458 	ld	hl, #_TILESET
   013F E5                  459 	push	hl
   0140 3E 5F               460 	ld	a, #0x5f
   0142 F5                  461 	push	af
   0143 33                  462 	inc	sp
   0144 AF                  463 	xor	a, a
   0145 F5                  464 	push	af
   0146 33                  465 	inc	sp
   0147 CDr00r00            466 	call	_set_bkg_data
   014A E8 04               467 	add	sp, #4
                            468 ;main.c:130: set_bkg_tiles(0, 0, TILEMAP_WIDTH, TILEMAP_HEIGHT, TILEMAP);
   014C 21r00r00            469 	ld	hl, #_TILEMAP
   014F E5                  470 	push	hl
   0150 3E 20               471 	ld	a, #0x20
   0152 F5                  472 	push	af
   0153 33                  473 	inc	sp
   0154 3E 20               474 	ld	a, #0x20
   0156 F5                  475 	push	af
   0157 33                  476 	inc	sp
   0158 AF                  477 	xor	a, a
   0159 F5                  478 	push	af
   015A 33                  479 	inc	sp
   015B AF                  480 	xor	a, a
   015C F5                  481 	push	af
   015D 33                  482 	inc	sp
   015E CDr00r00            483 	call	_set_bkg_tiles
   0161 E8 06               484 	add	sp, #6
                            485 ;main.c:132: SHOW_BKG;
   0163 21 40 FF            486 	ld	hl, #0xff40
   0166 7E                  487 	ld	a, (hl)
   0167 CB C7               488 	set	0, a
   0169 21 40 FF            489 	ld	hl, #0xff40
   016C 77                  490 	ld	(hl), a
                            491 ;main.c:135: UINT8 frame_skip = 8;  // On met à jour l'animation toutes les 8 frames
   016D F8 00               492 	ldhl	sp,	#0
   016F 36 08               493 	ld	(hl), #0x08
                            494 ;main.c:141: player_x = 80;
   0171 21r30r00            495 	ld	hl, #_player_x
   0174 36 50               496 	ld	(hl), #0x50
                            497 ;main.c:142: player_y = 72;
   0176 21r31r00            498 	ld	hl, #_player_y
   0179 36 48               499 	ld	(hl), #0x48
                            500 ;main.c:143: player_virtual_x = 80;
   017B 21r32r00            501 	ld	hl, #_player_virtual_x
   017E 36 50               502 	ld	(hl), #0x50
   0180 23                  503 	inc	hl
   0181 36 00               504 	ld	(hl), #0x00
                            505 ;main.c:144: player_virtual_y = 72;
   0183 21r34r00            506 	ld	hl, #_player_virtual_y
   0186 36 48               507 	ld	(hl), #0x48
   0188 23                  508 	inc	hl
   0189 36 00               509 	ld	(hl), #0x00
                            510 ;main.c:145: player_direction = PLAYER_DIRECTION_DOWN;
   018B 21r36r00            511 	ld	hl, #_player_direction
   018E 36 00               512 	ld	(hl), #0x00
                            513 ;main.c:146: player_animation_frame = 0;
   0190 21r37r00            514 	ld	hl, #_player_animation_frame
   0193 36 00               515 	ld	(hl), #0x00
                            516 ;main.c:147: is_player_walking = 0;
   0195 21r38r00            517 	ld	hl, #_is_player_walking
   0198 36 00               518 	ld	(hl), #0x00
                            519 ;main.c:150: set_sprite_data(0, PLAYER_SPRITES_TILE_COUNT, PLAYER_SPRITES);
   019A 21r00r00            520 	ld	hl, #_PLAYER_SPRITES
   019D E5                  521 	push	hl
   019E 3E 24               522 	ld	a, #0x24
   01A0 F5                  523 	push	af
   01A1 33                  524 	inc	sp
   01A2 AF                  525 	xor	a, a
   01A3 F5                  526 	push	af
   01A4 33                  527 	inc	sp
   01A5 CDr00r00            528 	call	_set_sprite_data
   01A8 E8 04               529 	add	sp, #4
                            530 ;main.c:153: SPRITES_8x16;
   01AA 21 40 FF            531 	ld	hl, #0xff40
   01AD 7E                  532 	ld	a, (hl)
   01AE CB D7               533 	set	2, a
   01B0 21 40 FF            534 	ld	hl, #0xff40
   01B3 77                  535 	ld	(hl), a
                            536 ;main.c:156: SHOW_SPRITES;
   01B4 2E 40               537 	ld	l, #0x40
   01B6 7E                  538 	ld	a, (hl)
   01B7 CB CF               539 	set	1, a
   01B9 21 40 FF            540 	ld	hl, #0xff40
   01BC 77                  541 	ld	(hl), a
                            542 ;main.c:159: move_sprite(PLAYER_SPRITE_L_ID, player_x, player_y);
   01BD 21r31r00            543 	ld	hl, #_player_y
   01C0 7E                  544 	ld	a, (hl)
   01C1 F5                  545 	push	af
   01C2 33                  546 	inc	sp
   01C3 21r30r00            547 	ld	hl, #_player_x
   01C6 7E                  548 	ld	a, (hl)
   01C7 F5                  549 	push	af
   01C8 33                  550 	inc	sp
   01C9 AF                  551 	xor	a, a
   01CA F5                  552 	push	af
   01CB 33                  553 	inc	sp
   01CC CDr00r00            554 	call	_move_sprite
   01CF E8 03               555 	add	sp, #3
                            556 ;main.c:160: set_sprite_prop(PLAYER_SPRITE_L_ID, S_PALETTE);
   01D1 3E 10               557 	ld	a, #0x10
   01D3 F5                  558 	push	af
   01D4 33                  559 	inc	sp
   01D5 AF                  560 	xor	a, a
   01D6 F5                  561 	push	af
   01D7 33                  562 	inc	sp
   01D8 CDr00r00            563 	call	_set_sprite_prop
   01DB E8 02               564 	add	sp, #2
                            565 ;main.c:162: move_sprite(PLAYER_SPRITE_R_ID, player_x + 8, player_y);
   01DD 21r30r00            566 	ld	hl, #_player_x
   01E0 7E                  567 	ld	a, (hl)
   01E1 C6 08               568 	add	a, #0x08
   01E3 47                  569 	ld	b, a
   01E4 21r31r00            570 	ld	hl, #_player_y
   01E7 7E                  571 	ld	a, (hl)
   01E8 F5                  572 	push	af
   01E9 33                  573 	inc	sp
   01EA C5                  574 	push	bc
   01EB 33                  575 	inc	sp
   01EC 3E 01               576 	ld	a, #0x01
   01EE F5                  577 	push	af
   01EF 33                  578 	inc	sp
   01F0 CDr00r00            579 	call	_move_sprite
   01F3 E8 03               580 	add	sp, #3
                            581 ;main.c:163: set_sprite_prop(PLAYER_SPRITE_R_ID, S_PALETTE);
   01F5 3E 10               582 	ld	a, #0x10
   01F7 F5                  583 	push	af
   01F8 33                  584 	inc	sp
   01F9 3E 01               585 	ld	a, #0x01
   01FB F5                  586 	push	af
   01FC 33                  587 	inc	sp
   01FD CDr00r00            588 	call	_set_sprite_prop
   0200 E8 02               589 	add	sp, #2
                            590 ;main.c:165: while (1)
   0202                     591 00137$:
                            592 ;main.c:168: wait_vbl_done();
   0202 CDr00r00            593 	call	_wait_vbl_done
                            594 ;main.c:172: keys = joypad();
   0205 CDr00r00            595 	call	_joypad
   0208 7B                  596 	ld	a, e
   0209 4F                  597 	ld	c, a
                            598 ;main.c:174: if (keys & J_UP && player_virtual_y > 70)
   020A CB 51               599 	bit	2, c
   020C CAr4Ar02            600 	jp	Z,00114$
   020F 21r34r00            601 	ld	hl, #_player_virtual_y
   0212 3E 46               602 	ld	a, #0x46
   0214 96                  603 	sub	a, (hl)
   0215 23                  604 	inc	hl
   0216 3E 00               605 	ld	a, #0x00
   0218 9E                  606 	sbc	a, (hl)
   0219 3E 00               607 	ld	a, #0x00
   021B 57                  608 	ld	d, a
   021C 5E                  609 	ld	e, (hl)
   021D CB 7B               610 	bit	7, e
   021F 28 07               611 	jr	Z,00222$
   0221 CB 7A               612 	bit	7, d
   0223 20 08               613 	jr	NZ,00223$
   0225 BF                  614 	cp	a, a
   0226 18 05               615 	jr	00223$
   0228                     616 00222$:
   0228 CB 7A               617 	bit	7, d
   022A 28 01               618 	jr	Z,00223$
   022C 37                  619 	scf
   022D                     620 00223$:
   022D 30 1B               621 	jr	NC,00114$
                            622 ;main.c:176: scroll_bkg(0, -1);
   022F C5                  623 	push	bc
   0230 3E FF               624 	ld	a, #0xff
   0232 F5                  625 	push	af
   0233 33                  626 	inc	sp
   0234 AF                  627 	xor	a, a
   0235 F5                  628 	push	af
   0236 33                  629 	inc	sp
   0237 CDr00r00            630 	call	_scroll_bkg
   023A E8 02               631 	add	sp, #2
   023C C1                  632 	pop	bc
                            633 ;main.c:177: player_direction = PLAYER_DIRECTION_UP;
   023D 21r36r00            634 	ld	hl, #_player_direction
   0240 36 06               635 	ld	(hl), #0x06
                            636 ;main.c:178: is_player_walking = 1;
   0242 21r38r00            637 	ld	hl, #_is_player_walking
   0245 36 01               638 	ld	(hl), #0x01
   0247 C3r12r03            639 	jp	00115$
   024A                     640 00114$:
                            641 ;main.c:180: else if (keys & J_DOWN && player_virtual_y < 190)
   024A CB 59               642 	bit	3, c
   024C CAr8Ar02            643 	jp	Z,00110$
   024F 21r34r00            644 	ld	hl, #_player_virtual_y
   0252 7E                  645 	ld	a, (hl)
   0253 D6 BE               646 	sub	a, #0xbe
   0255 23                  647 	inc	hl
   0256 7E                  648 	ld	a, (hl)
   0257 DE 00               649 	sbc	a, #0x00
   0259 56                  650 	ld	d, (hl)
   025A 3E 00               651 	ld	a, #0x00
   025C 5F                  652 	ld	e, a
   025D CB 7B               653 	bit	7, e
   025F 28 07               654 	jr	Z,00225$
   0261 CB 7A               655 	bit	7, d
   0263 20 08               656 	jr	NZ,00226$
   0265 BF                  657 	cp	a, a
   0266 18 05               658 	jr	00226$
   0268                     659 00225$:
   0268 CB 7A               660 	bit	7, d
   026A 28 01               661 	jr	Z,00226$
   026C 37                  662 	scf
   026D                     663 00226$:
   026D 30 1B               664 	jr	NC,00110$
                            665 ;main.c:182: scroll_bkg(0, 1);
   026F C5                  666 	push	bc
   0270 3E 01               667 	ld	a, #0x01
   0272 F5                  668 	push	af
   0273 33                  669 	inc	sp
   0274 AF                  670 	xor	a, a
   0275 F5                  671 	push	af
   0276 33                  672 	inc	sp
   0277 CDr00r00            673 	call	_scroll_bkg
   027A E8 02               674 	add	sp, #2
   027C C1                  675 	pop	bc
                            676 ;main.c:183: player_direction = PLAYER_DIRECTION_DOWN;
   027D 21r36r00            677 	ld	hl, #_player_direction
   0280 36 00               678 	ld	(hl), #0x00
                            679 ;main.c:184: is_player_walking = 1;
   0282 21r38r00            680 	ld	hl, #_is_player_walking
   0285 36 01               681 	ld	(hl), #0x01
   0287 C3r12r03            682 	jp	00115$
   028A                     683 00110$:
                            684 ;main.c:186: else if (keys & J_LEFT && player_virtual_x > 70)
   028A CB 49               685 	bit	1, c
   028C CArCAr02            686 	jp	Z,00106$
   028F 21r32r00            687 	ld	hl, #_player_virtual_x
   0292 3E 46               688 	ld	a, #0x46
   0294 96                  689 	sub	a, (hl)
   0295 23                  690 	inc	hl
   0296 3E 00               691 	ld	a, #0x00
   0298 9E                  692 	sbc	a, (hl)
   0299 3E 00               693 	ld	a, #0x00
   029B 57                  694 	ld	d, a
   029C 5E                  695 	ld	e, (hl)
   029D CB 7B               696 	bit	7, e
   029F 28 07               697 	jr	Z,00228$
   02A1 CB 7A               698 	bit	7, d
   02A3 20 08               699 	jr	NZ,00229$
   02A5 BF                  700 	cp	a, a
   02A6 18 05               701 	jr	00229$
   02A8                     702 00228$:
   02A8 CB 7A               703 	bit	7, d
   02AA 28 01               704 	jr	Z,00229$
   02AC 37                  705 	scf
   02AD                     706 00229$:
   02AD 30 1B               707 	jr	NC,00106$
                            708 ;main.c:188: scroll_bkg(-1, 0);    
   02AF C5                  709 	push	bc
   02B0 AF                  710 	xor	a, a
   02B1 F5                  711 	push	af
   02B2 33                  712 	inc	sp
   02B3 3E FF               713 	ld	a, #0xff
   02B5 F5                  714 	push	af
   02B6 33                  715 	inc	sp
   02B7 CDr00r00            716 	call	_scroll_bkg
   02BA E8 02               717 	add	sp, #2
   02BC C1                  718 	pop	bc
                            719 ;main.c:189: player_direction = PLAYER_DIRECTION_LEFT;
   02BD 21r36r00            720 	ld	hl, #_player_direction
   02C0 36 12               721 	ld	(hl), #0x12
                            722 ;main.c:190: is_player_walking = 1;
   02C2 21r38r00            723 	ld	hl, #_is_player_walking
   02C5 36 01               724 	ld	(hl), #0x01
   02C7 C3r12r03            725 	jp	00115$
   02CA                     726 00106$:
                            727 ;main.c:192: else if (keys & J_RIGHT && player_virtual_x < 170)
   02CA CB 41               728 	bit	0, c
   02CC CAr09r03            729 	jp	Z,00102$
   02CF 21r32r00            730 	ld	hl, #_player_virtual_x
   02D2 7E                  731 	ld	a, (hl)
   02D3 D6 AA               732 	sub	a, #0xaa
   02D5 23                  733 	inc	hl
   02D6 7E                  734 	ld	a, (hl)
   02D7 DE 00               735 	sbc	a, #0x00
   02D9 56                  736 	ld	d, (hl)
   02DA 3E 00               737 	ld	a, #0x00
   02DC 5F                  738 	ld	e, a
   02DD CB 7B               739 	bit	7, e
   02DF 28 07               740 	jr	Z,00231$
   02E1 CB 7A               741 	bit	7, d
   02E3 20 08               742 	jr	NZ,00232$
   02E5 BF                  743 	cp	a, a
   02E6 18 05               744 	jr	00232$
   02E8                     745 00231$:
   02E8 CB 7A               746 	bit	7, d
   02EA 28 01               747 	jr	Z,00232$
   02EC 37                  748 	scf
   02ED                     749 00232$:
   02ED 30 1A               750 	jr	NC,00102$
                            751 ;main.c:194: scroll_bkg(1, 0);
   02EF C5                  752 	push	bc
   02F0 AF                  753 	xor	a, a
   02F1 F5                  754 	push	af
   02F2 33                  755 	inc	sp
   02F3 3E 01               756 	ld	a, #0x01
   02F5 F5                  757 	push	af
   02F6 33                  758 	inc	sp
   02F7 CDr00r00            759 	call	_scroll_bkg
   02FA E8 02               760 	add	sp, #2
   02FC C1                  761 	pop	bc
                            762 ;main.c:195: player_direction = PLAYER_DIRECTION_RIGHT;
   02FD 21r36r00            763 	ld	hl, #_player_direction
   0300 36 0C               764 	ld	(hl), #0x0c
                            765 ;main.c:196: is_player_walking = 1;
   0302 21r38r00            766 	ld	hl, #_is_player_walking
   0305 36 01               767 	ld	(hl), #0x01
   0307 18 09               768 	jr	00115$
   0309                     769 00102$:
                            770 ;main.c:200: is_player_walking = 0;
   0309 21r38r00            771 	ld	hl, #_is_player_walking
   030C 36 00               772 	ld	(hl), #0x00
                            773 ;main.c:201: frame_skip = 1;  // On force le rafraîchissement de l'animation
   030E F8 00               774 	ldhl	sp,	#0
   0310 36 01               775 	ld	(hl), #0x01
   0312                     776 00115$:
                            777 ;main.c:204: if (keys & J_START)
   0312 CB 79               778 	bit	7, c
   0314 28 25               779 	jr	Z,00118$
                            780 ;main.c:206: move_bkg(0, 0);
   0316 AF                  781 	xor	a, a
   0317 F5                  782 	push	af
   0318 33                  783 	inc	sp
   0319 AF                  784 	xor	a, a
   031A F5                  785 	push	af
   031B 33                  786 	inc	sp
   031C CDr00r00            787 	call	_move_bkg
   031F E8 02               788 	add	sp, #2
                            789 ;main.c:207: player_x = 80;
   0321 21r30r00            790 	ld	hl, #_player_x
   0324 36 50               791 	ld	(hl), #0x50
                            792 ;main.c:208: player_y = 72;
   0326 21r31r00            793 	ld	hl, #_player_y
   0329 36 48               794 	ld	(hl), #0x48
                            795 ;main.c:209: player_virtual_x = 80;
   032B 21r32r00            796 	ld	hl, #_player_virtual_x
   032E 36 50               797 	ld	(hl), #0x50
   0330 23                  798 	inc	hl
   0331 36 00               799 	ld	(hl), #0x00
                            800 ;main.c:210: player_virtual_y = 72;
   0333 21r34r00            801 	ld	hl, #_player_virtual_y
   0336 36 48               802 	ld	(hl), #0x48
   0338 23                  803 	inc	hl
   0339 36 00               804 	ld	(hl), #0x00
   033B                     805 00118$:
                            806 ;main.c:215: if (is_player_walking)
   033B 21r38r00            807 	ld	hl, #_is_player_walking
   033E 7E                  808 	ld	a, (hl)
   033F B7                  809 	or	a, a
   0340 CArCBr03            810 	jp	Z, 00134$
                            811 ;main.c:224: if (player_direction == PLAYER_DIRECTION_RIGHT) player_virtual_x += 1;
   0343 21r36r00            812 	ld	hl, #_player_direction
   0346 7E                  813 	ld	a, (hl)
   0347 D6 0C               814 	sub	a, #0x0c
   0349 20 0C               815 	jr	NZ,00128$
   034B 21r32r00            816 	ld	hl, #_player_virtual_x
   034E 34                  817 	inc	(hl)
   034F C2r92r03            818 	jp	NZ,00129$
   0352 23                  819 	inc	hl
   0353 34                  820 	inc	(hl)
   0354 C3r92r03            821 	jp	00129$
   0357                     822 00128$:
                            823 ;main.c:225: else if (player_direction == PLAYER_DIRECTION_LEFT) player_virtual_x -= 1;
   0357 21r36r00            824 	ld	hl, #_player_direction
   035A 7E                  825 	ld	a, (hl)
   035B D6 12               826 	sub	a, #0x12
   035D 20 0E               827 	jr	NZ,00125$
   035F 21r33r00            828 	ld	hl, #_player_virtual_x + 1
   0362 2B                  829 	dec	hl
   0363 5E                  830 	ld	e, (hl)
   0364 23                  831 	inc	hl
   0365 56                  832 	ld	d, (hl)
   0366 1B                  833 	dec	de
   0367 2B                  834 	dec	hl
   0368 73                  835 	ld	(hl), e
   0369 23                  836 	inc	hl
   036A 72                  837 	ld	(hl), d
   036B 18 25               838 	jr	00129$
   036D                     839 00125$:
                            840 ;main.c:226: else if (player_direction == PLAYER_DIRECTION_UP) player_virtual_y -= 1;
   036D 21r36r00            841 	ld	hl, #_player_direction
   0370 7E                  842 	ld	a, (hl)
   0371 D6 06               843 	sub	a, #0x06
   0373 20 0E               844 	jr	NZ,00122$
   0375 21r35r00            845 	ld	hl, #_player_virtual_y + 1
   0378 2B                  846 	dec	hl
   0379 5E                  847 	ld	e, (hl)
   037A 23                  848 	inc	hl
   037B 56                  849 	ld	d, (hl)
   037C 1B                  850 	dec	de
   037D 2B                  851 	dec	hl
   037E 73                  852 	ld	(hl), e
   037F 23                  853 	inc	hl
   0380 72                  854 	ld	(hl), d
   0381 18 0F               855 	jr	00129$
   0383                     856 00122$:
                            857 ;main.c:227: else if (player_direction == PLAYER_DIRECTION_DOWN) player_virtual_y += 1;
   0383 21r36r00            858 	ld	hl, #_player_direction
   0386 7E                  859 	ld	a, (hl)
   0387 B7                  860 	or	a, a
   0388 20 08               861 	jr	NZ,00129$
   038A 21r34r00            862 	ld	hl, #_player_virtual_y
   038D 34                  863 	inc	(hl)
   038E 20 02               864 	jr	NZ,00241$
   0390 23                  865 	inc	hl
   0391 34                  866 	inc	(hl)
   0392                     867 00241$:
   0392                     868 00129$:
                            869 ;main.c:229: move_sprite(PLAYER_SPRITE_L_ID, player_x, player_y);
   0392 21r31r00            870 	ld	hl, #_player_y
   0395 7E                  871 	ld	a, (hl)
   0396 F5                  872 	push	af
   0397 33                  873 	inc	sp
   0398 21r30r00            874 	ld	hl, #_player_x
   039B 7E                  875 	ld	a, (hl)
   039C F5                  876 	push	af
   039D 33                  877 	inc	sp
   039E AF                  878 	xor	a, a
   039F F5                  879 	push	af
   03A0 33                  880 	inc	sp
   03A1 CDr00r00            881 	call	_move_sprite
   03A4 E8 03               882 	add	sp, #3
                            883 ;main.c:230: move_sprite(PLAYER_SPRITE_R_ID, player_x + 8, player_y);
   03A6 21r30r00            884 	ld	hl, #_player_x
   03A9 7E                  885 	ld	a, (hl)
   03AA C6 08               886 	add	a, #0x08
   03AC 47                  887 	ld	b, a
   03AD 21r31r00            888 	ld	hl, #_player_y
   03B0 7E                  889 	ld	a, (hl)
   03B1 F5                  890 	push	af
   03B2 33                  891 	inc	sp
   03B3 C5                  892 	push	bc
   03B4 33                  893 	inc	sp
   03B5 3E 01               894 	ld	a, #0x01
   03B7 F5                  895 	push	af
   03B8 33                  896 	inc	sp
   03B9 CDr00r00            897 	call	_move_sprite
   03BC E8 03               898 	add	sp, #3
                            899 ;main.c:235: frame_skip -= 1;
   03BE F8 00               900 	ldhl	sp,	#0
   03C0 7E                  901 	ld	a, (hl)
   03C1 3D                  902 	dec	a
   03C2 77                  903 	ld	(hl), a
                            904 ;main.c:237: if (!frame_skip)
   03C3 B7                  905 	or	a, a
   03C4 C2r02r02            906 	jp	NZ, 00137$
                            907 ;main.c:239: frame_skip = 8;
   03C7 36 08               908 	ld	(hl), #0x08
   03C9 18 05               909 	jr	00135$
                            910 ;main.c:243: continue;
   03CB                     911 00134$:
                            912 ;main.c:248: player_animation_frame = 0;
   03CB 21r37r00            913 	ld	hl, #_player_animation_frame
   03CE 36 00               914 	ld	(hl), #0x00
   03D0                     915 00135$:
                            916 ;main.c:254: PLAYER_SPRITE_ANIM_L,
                            917 ;main.c:253: PLAYER_SPRITE_L_ID,
   03D0 21r37r00            918 	ld	hl, #_player_animation_frame
   03D3 7E                  919 	ld	a, (hl)
   03D4 F5                  920 	push	af
   03D5 33                  921 	inc	sp
   03D6 21r36r00            922 	ld	hl, #_player_direction
   03D9 7E                  923 	ld	a, (hl)
   03DA F5                  924 	push	af
   03DB 33                  925 	inc	sp
   03DC 21r00r00            926 	ld	hl, #_PLAYER_SPRITE_ANIM_L
   03DF E5                  927 	push	hl
   03E0 AF                  928 	xor	a, a
   03E1 F5                  929 	push	af
   03E2 33                  930 	inc	sp
   03E3 CDr32r00            931 	call	_update_sprite_animation
   03E6 E8 05               932 	add	sp, #5
                            933 ;main.c:259: PLAYER_SPRITE_ANIM_R,
                            934 ;main.c:258: PLAYER_SPRITE_R_ID,
   03E8 21r37r00            935 	ld	hl, #_player_animation_frame
   03EB 7E                  936 	ld	a, (hl)
   03EC F5                  937 	push	af
   03ED 33                  938 	inc	sp
   03EE 21r36r00            939 	ld	hl, #_player_direction
   03F1 7E                  940 	ld	a, (hl)
   03F2 F5                  941 	push	af
   03F3 33                  942 	inc	sp
   03F4 21r18r00            943 	ld	hl, #_PLAYER_SPRITE_ANIM_R
   03F7 E5                  944 	push	hl
   03F8 3E 01               945 	ld	a, #0x01
   03FA F5                  946 	push	af
   03FB 33                  947 	inc	sp
   03FC CDr32r00            948 	call	_update_sprite_animation
   03FF E8 05               949 	add	sp, #5
   0401 21r37r00            950 	ld	hl, #_player_animation_frame
   0404 73                  951 	ld	(hl), e
   0405 C3r02r02            952 	jp	00137$
                            953 ;main.c:263: }
   0408 33                  954 	inc	sp
   0409 C9                  955 	ret
                            956 	.area _CODE
                            957 	.area _CABS (ABS)
